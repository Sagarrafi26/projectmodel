{"ast":null,"code":"var _jsxFileName = \"D:\\\\ModelProject\\\\frontend\\\\src\\\\Components\\\\Table.js\";\n// import React from 'react';\n\n// class Table extends React.Component {\n//   render() {\n//     // Generate IDs 1 to 30\n//     const ids = Array.from({ length: 30 }, (_, i) => i + 1);\n//     // Sample ModelIds\n//     const modelIds = ['model1', 'model2', 'model3', 'model4', 'model5'];\n\n//     return (\n//       <div className=\"overflow-x-auto\">\n//         <table className=\"table-auto border border-collapse border-gray-500\">\n//           <thead>\n//             <tr className=\"bg-gray-200\">\n//               <th className=\"border border-gray-500\"></th>\n//               {/* Render IDs horizontally */}\n//               {ids.map(id => (\n//                 <th key={id} className=\"border border-gray-500 px-4 py-2\">{id}</th>\n//               ))}\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {/* Render ModelIds vertically */}\n//             {modelIds.map(modelId => (\n//               <tr key={modelId}>\n//                 <td className=\"border border-gray-500 px-4 py-2\">{modelId}</td>\n\n//                 {ids.map(id => (\n//                   <td key={id} className=\"border border-gray-500 px-4 py-2\"></td>\n//                 ))}\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Table;\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCellClick = (modelId, id) => {\n      this.setState({\n        selectedCell: {\n          modelId,\n          id\n        },\n        // Set the selected cell\n        editedValue: this.props.data[modelId][id] || '' // Set the edited value from props or empty string\n      });\n    };\n    this.handleValueChange = event => {\n      this.setState({\n        editedValue: event.target.value\n      });\n    };\n    this.handleSave = async () => {\n      const {\n        selectedCell,\n        editedValue\n      } = this.state;\n      try {\n        await axios.put(`/update/${selectedCell.id}/${selectedCell.modelId}`, {\n          productionValue: editedValue\n        });\n        console.log('Data saved successfully');\n        // Refresh data after saving\n        this.props.refreshData();\n      } catch (error) {\n        console.error('Error saving data:', error);\n      }\n      // Clear selected cell and edited value\n      this.setState({\n        selectedCell: null,\n        editedValue: ''\n      });\n    };\n    this.handleCancel = () => {\n      // Clear selected cell and edited value\n      this.setState({\n        selectedCell: null,\n        editedValue: ''\n      });\n    };\n    this.state = {\n      editedValue: '',\n      // State to track edited value\n      selectedCell: null // State to track selected cell\n    };\n  }\n  render() {\n    const {\n      data\n    } = this.props;\n    const {\n      editedValue,\n      selectedCell\n    } = this.state;\n    const ids = Array.from({\n      length: 30\n    }, (_, i) => i + 1);\n    const modelIds = ['model1', 'model2', 'model3', 'model4', 'model5'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-auto border border-collapse border-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), ids.map(id => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-500 px-4 py-2\",\n              children: id\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: modelIds.map(modelId => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-500 px-4 py-2\",\n              children: modelId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), ids.map(id => {\n              const cellValue = data[modelId][id];\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: `border border-gray-500 px-4 py-2 ${selectedCell && selectedCell.modelId === modelId && selectedCell.id === id ? 'bg-gray-200' : ''}`,\n                onClick: () => this.handleCellClick(modelId, id),\n                children: selectedCell && selectedCell.modelId === modelId && selectedCell.id === id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editedValue,\n                  onChange: this.handleValueChange,\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 25\n                }, this) : cellValue\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this);\n            })]\n          }, modelId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), selectedCell && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Table;","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","Table","Component","constructor","props","handleCellClick","modelId","id","setState","selectedCell","editedValue","data","handleValueChange","event","target","value","handleSave","state","put","productionValue","console","log","refreshData","error","handleCancel","render","ids","Array","from","length","_","i","modelIds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cellValue","onClick","type","onChange","autoFocus"],"sources":["D:/ModelProject/frontend/src/Components/Table.js"],"sourcesContent":["// import React from 'react';\r\n\r\n// class Table extends React.Component {\r\n//   render() {\r\n//     // Generate IDs 1 to 30\r\n//     const ids = Array.from({ length: 30 }, (_, i) => i + 1);\r\n//     // Sample ModelIds\r\n//     const modelIds = ['model1', 'model2', 'model3', 'model4', 'model5'];\r\n\r\n//     return (\r\n//       <div className=\"overflow-x-auto\">\r\n//         <table className=\"table-auto border border-collapse border-gray-500\">\r\n//           <thead>\r\n//             <tr className=\"bg-gray-200\">\r\n//               <th className=\"border border-gray-500\"></th>\r\n//               {/* Render IDs horizontally */}\r\n//               {ids.map(id => (\r\n//                 <th key={id} className=\"border border-gray-500 px-4 py-2\">{id}</th>\r\n//               ))}\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {/* Render ModelIds vertically */}\r\n//             {modelIds.map(modelId => (\r\n//               <tr key={modelId}>\r\n//                 <td className=\"border border-gray-500 px-4 py-2\">{modelId}</td>\r\n            \r\n//                 {ids.map(id => (\r\n//                   <td key={id} className=\"border border-gray-500 px-4 py-2\"></td>\r\n//                 ))}\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Table;\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Table extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editedValue: '', // State to track edited value\r\n      selectedCell: null // State to track selected cell\r\n    };\r\n  }\r\n\r\n  handleCellClick = (modelId, id) => {\r\n    this.setState({\r\n      selectedCell: { modelId, id }, // Set the selected cell\r\n      editedValue: this.props.data[modelId][id] || '' // Set the edited value from props or empty string\r\n    });\r\n  };\r\n\r\n  handleValueChange = (event) => {\r\n    this.setState({ editedValue: event.target.value });\r\n  };\r\n\r\n  handleSave = async () => {\r\n    const { selectedCell, editedValue } = this.state;\r\n    try {\r\n      await axios.put(`/update/${selectedCell.id}/${selectedCell.modelId}`, {\r\n        productionValue: editedValue\r\n      });\r\n      console.log('Data saved successfully');\r\n      // Refresh data after saving\r\n      this.props.refreshData();\r\n    } catch (error) {\r\n      console.error('Error saving data:', error);\r\n    }\r\n    // Clear selected cell and edited value\r\n    this.setState({ selectedCell: null, editedValue: '' });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    // Clear selected cell and edited value\r\n    this.setState({ selectedCell: null, editedValue: '' });\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n    const { editedValue, selectedCell } = this.state;\r\n\r\n    const ids = Array.from({ length: 30 }, (_, i) => i + 1);\r\n    const modelIds = ['model1', 'model2', 'model3', 'model4', 'model5'];\r\n\r\n    return (\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"table-auto border border-collapse border-gray-500\">\r\n          <thead>\r\n            <tr className=\"bg-gray-200\">\r\n              <th className=\"border border-gray-500\"></th>\r\n              {ids.map(id => (\r\n                <th key={id} className=\"border border-gray-500 px-4 py-2\">{id}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {modelIds.map(modelId => (\r\n              <tr key={modelId}>\r\n                <td className=\"border border-gray-500 px-4 py-2\">{modelId}</td>\r\n                {ids.map(id => {\r\n                  const cellValue = data[modelId][id];\r\n                  return (\r\n                    <td\r\n                      key={id}\r\n                      className={`border border-gray-500 px-4 py-2 ${selectedCell && selectedCell.modelId === modelId && selectedCell.id === id ? 'bg-gray-200' : ''}`}\r\n                      onClick={() => this.handleCellClick(modelId, id)}\r\n                    >\r\n                      {selectedCell && selectedCell.modelId === modelId && selectedCell.id === id ? (\r\n                        <input\r\n                          type=\"text\"\r\n                          value={editedValue}\r\n                          onChange={this.handleValueChange}\r\n                          autoFocus\r\n                        />\r\n                      ) : (\r\n                        cellValue\r\n                      )}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        {selectedCell && (\r\n          <div>\r\n            <button onClick={this.handleSave}>Save</button>\r\n            <button onClick={this.handleCancel}>Cancel</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}