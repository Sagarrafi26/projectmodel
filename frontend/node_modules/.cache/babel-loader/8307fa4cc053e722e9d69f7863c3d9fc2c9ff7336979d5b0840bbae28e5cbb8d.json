{"ast":null,"code":"var _jsxFileName = \"D:\\\\ModelProject\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Table from './Components/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n\n  // Fetch data from backend when the component mounts\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Function to fetch data from backend\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:8082/data');\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const jsonData = await response.json();\n      setData(jsonData.data); // Set the fetched data in state\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Table","jsxDEV","_jsxDEV","App","_s","data","setData","useState","useEffect","fetchData","response","fetch","ok","Error","jsonData","json","error","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ModelProject/frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport Table from './Components/Table';\n\nfunction App() {\n  const [data, setData] = useState(null);\n\n  // Fetch data from backend when the component mounts\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Function to fetch data from backend\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:8082/data');\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const jsonData = await response.json();\n      setData(jsonData.data); // Set the fetched data in state\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  return (\n    <Table/>\n     );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAElB,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACdC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;MAC1D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACA,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACtCT,OAAO,CAACQ,QAAQ,CAACT,IAAI,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEd,OAAA,CAACF,KAAK;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEZ;AAACjB,EAAA,CAzBQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}