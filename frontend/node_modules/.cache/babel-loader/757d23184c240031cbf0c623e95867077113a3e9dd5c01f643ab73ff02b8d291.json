{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectmodel\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport './App.css';\nimport Table from './Components/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const modelIds = ['model1', 'model2', 'model3', 'model4', 'model5'];\n  // Fetch data from backend when the component mounts\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // API call to fetch data from backend\n    fetch(\"http://localhost:8082/data\").then(response => response.json()).then(responseData => {\n      console.log(\"Fetched data:\", responseData); // Log the fetched data\n      // Check if responseData contains the expected 'data' property and if it's an array\n      if (responseData && Array.isArray(responseData.data)) {\n        setData(responseData.data);\n      } else {\n        console.error(\"Error: Fetched data is not in the expected format.\");\n      }\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    modelIds: modelIds,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Table","jsxDEV","_jsxDEV","App","_s","modelIds","data","setData","useState","fetch","then","response","json","responseData","console","log","Array","isArray","error","catch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/projectmodel/frontend/src/App.js"],"sourcesContent":["\nimport { useEffect } from 'react';\nimport './App.css';\n\nimport Table from './Components/Table';\n\nfunction App() {\n  \n  const modelIds = ['model1', 'model2', 'model3', 'model4', 'model5'];\n  // Fetch data from backend when the component mounts\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // API call to fetch data from backend\n    fetch(\"http://localhost:8082/data\")\n      .then((response) => response.json())\n      .then((responseData) => {\n        console.log(\"Fetched data:\", responseData); // Log the fetched data\n        // Check if responseData contains the expected 'data' property and if it's an array\n        if (responseData && Array.isArray(responseData.data)) {\n          setData(responseData.data);\n        } else {\n          console.error(\"Error: Fetched data is not in the expected format.\");\n        }\n      })\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);\n  return (\n    \n    <Table modelIds={modelIds} data={data}/>\n     );\n}\n\nexport default App;\n"],"mappings":";;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAElB,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,QAAQ,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;EACnE;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEpCT,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,YAAY,IAAK;MACtBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,YAAY,CAAC,CAAC,CAAC;MAC5C;MACA,IAAIA,YAAY,IAAIG,KAAK,CAACC,OAAO,CAACJ,YAAY,CAACP,IAAI,CAAC,EAAE;QACpDC,OAAO,CAACM,YAAY,CAACP,IAAI,CAAC;MAC5B,CAAC,MAAM;QACLQ,OAAO,CAACI,KAAK,CAAC,oDAAoD,CAAC;MACrE;IACF,CAAC,CAAC,CACDC,KAAK,CAAED,KAAK,IAAKJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EACN,oBAEEhB,OAAA,CAACF,KAAK;IAACK,QAAQ,EAAEA,QAAS;IAACC,IAAI,EAAEA;EAAK;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAE5C;AAACnB,EAAA,CAzBQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}